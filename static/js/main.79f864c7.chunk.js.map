{"version":3,"sources":["styles/theme.js","components/Navbar.js","components/Loader.js","components/Contents.js","components/Table.js","components/App.js","styles/GlobalStyles.js","index.js"],"names":["theme","bgColor","SecondBg","GraphBar","Confirm","Recover","Death","Wrapper","styled","div","Navigation","nav","TextCovid","h1","TextAn","span","Navbar","to","Loader","className","width","height","viewBox","xmlns","fill","strokeWidth","strokeLinecap","cx","cy","r","TextH1","FlexDiv","EachDiv","TotalWordDiv","ConDiv","attrs","RecovDiv","DeathDiv","labelForChart","NATIONCODE","getapi","axios","create","baseURL","Contents","props","useState","confirmed","setConfirmed","toDay","setToday","toDayDate","setTodayDate","isLoading","setLoading","useEffect","a","get","then","response","arrData","data","map","each","getDateData","Date","year","getFullYear","month","getMonth","date","getDate","active","Active","Confirmed","country","Country","deaths","Deaths","recovered","Recovered","confirmedData","reduce","acc","cur","findItem","find","push","todayData","length","labels","datasets","label","barPercentage","barThickness","maxBarThickness","minBarLength","backgroundColor","title","catch","error","console","getApi","Table","centerInfo","setCenterInfo","centerData","id","address","centerType","centerName","facilityName","App","exact","path","GlobalStyles","createGlobalStyle","reset","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79f864c7.chunk.js","sourcesContent":["const theme = {\r\n  bgColor: \"#19CE60\",\r\n  SecondBg: \"#F2ECEE\",\r\n  GraphBar: \"#34495e\",\r\n  Confirm: \"#FF6384\",\r\n  Recover: \"#36A2EB\",\r\n  Death: \"#2c3e50\",\r\n};\r\n\r\nexport default theme;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport theme from \"../styles/theme\";\r\n\r\nconst Wrapper = styled.div`\r\n  background-color: ${theme.bgColor};\r\n`;\r\n\r\nconst Navigation = styled.nav`\r\n  padding: 20px 15% 20px 15%;\r\n  background-color: ${theme.bgColor};\r\n  display: flex;\r\n  align-items: flex-end;\r\n`;\r\n\r\nconst TextCovid = styled.h1`\r\n  font-size: 50px;\r\n  font-weight: 800;\r\n  color: white;\r\n`;\r\nconst TextAn = styled.span`\r\n  font-size: 15px;\r\n  font-weight: 800;\r\n  color: white;\r\n  padding-left: 30px;\r\n`;\r\nconst Navbar = () => {\r\n  return (\r\n    <Wrapper>\r\n      <Navigation>\r\n        <Link to=\"/\">\r\n          <TextCovid>Covid-19</TextCovid>\r\n        </Link>\r\n        <Link to=\"/\">\r\n          <TextAn>확진자현황</TextAn>\r\n        </Link>\r\n        <Link to=\"/table\">\r\n          <TextAn>코로나백신센터</TextAn>\r\n        </Link>\r\n      </Navigation>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\n\r\nexport default function Loader() {\r\n  return (\r\n    <svg\r\n      className=\"spinner\"\r\n      width=\"65px\"\r\n      height=\"65px\"\r\n      viewBox=\"0 0 66 66\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <circle\r\n        className=\"path\"\r\n        fill=\"none\"\r\n        strokeWidth=\"6\"\r\n        strokeLinecap=\"round\"\r\n        cx=\"33\"\r\n        cy=\"33\"\r\n        r=\"30\"\r\n      ></circle>\r\n    </svg>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Doughnut, Bar } from \"react-chartjs-2\";\r\nimport axios from \"axios\";\r\nimport theme from \"../styles/theme\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst Wrapper = styled.div`\r\n  padding: 20px 15% 20px 15%;\r\n`;\r\n\r\nconst TextH1 = styled.h1`\r\n  font-size: 30px;\r\n  font-weight: 600;\r\n  display: block;\r\n  margin-bottom: 20px;\r\n  margin-top: 30px;\r\n`;\r\n\r\nconst FlexDiv = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst EachDiv = styled.div`\r\n  margin: 40px 0 40px 0;\r\n  padding: 0 20% 0 20%;\r\n`;\r\n\r\nconst TotalWordDiv = styled.div`\r\n  margin: 30px 0 30px;\r\n  font-size: 20px;\r\n  font-weight: 800;\r\n  display: grid;\r\n  grid-template: 1fr / repeat(3, 1fr);\r\n`;\r\nconst ConDiv = styled.div.attrs({\r\n  className: \"flex-box\",\r\n})`\r\n  color: ${theme.Confirm};\r\n`;\r\nconst RecovDiv = styled.div.attrs({\r\n  className: \"flex-box\",\r\n})`\r\n  color: ${theme.Recover};\r\n`;\r\nconst DeathDiv = styled.div.attrs({\r\n  className: \"flex-box\",\r\n})`\r\n  color: ${theme.Death};\r\n`;\r\n\r\nconst labelForChart = {\r\n  confirmed: \"2020 ~ 2021 년도 확진자 수\",\r\n};\r\n\r\nconst CORONAAPI = \"https://api.covid19api.com/dayone/country/\";\r\n\r\nconst NATIONCODE = {\r\n  Korea: \"/kr\",\r\n};\r\n\r\nconst getapi = axios.create({\r\n  baseURL: CORONAAPI,\r\n});\r\n\r\nconst Contents = (props) => {\r\n  const [confirmed, setConfirmed] = useState({});\r\n  const [toDay, setToday] = useState({});\r\n  const [toDayDate, setTodayDate] = useState(\"\");\r\n\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setLoading(true);\r\n      await getapi\r\n        .get(NATIONCODE.Korea)\r\n        .then((response) => {\r\n          const downData = response.data;\r\n\r\n          const arrData = downData.map((each) => {\r\n            const getDateData = new Date(each.Date);\r\n            const year = getDateData.getFullYear();\r\n            const month = getDateData.getMonth();\r\n            const date = getDateData.getDate();\r\n            return {\r\n              year,\r\n              month,\r\n              date,\r\n              active: each.Active,\r\n              confirmed: each.Confirmed,\r\n              country: each.Country,\r\n              deaths: each.Deaths,\r\n              recovered: each.Recovered,\r\n            };\r\n          });\r\n\r\n          const confirmedData = arrData.reduce((acc, cur) => {\r\n            const year = cur.year;\r\n            const month = cur.month;\r\n            const date = cur.date;\r\n            const confirmed = cur.confirmed;\r\n\r\n            const findItem = acc.find(\r\n              (each) => each.year === year && each.month === month\r\n            );\r\n\r\n            if (!findItem) {\r\n              acc.push({\r\n                year,\r\n                month,\r\n                date,\r\n                confirmed,\r\n              });\r\n            }\r\n\r\n            if (findItem && findItem.date < date) {\r\n              findItem.year = year;\r\n              findItem.month = month;\r\n              findItem.data = date;\r\n              findItem.confirmed = confirmed;\r\n            }\r\n\r\n            return acc;\r\n          }, []);\r\n\r\n          const todayData = {\r\n            year: arrData[arrData.length - 2].year,\r\n            month: arrData[arrData.length - 2].month,\r\n            date: arrData[arrData.length - 2].date,\r\n            active:\r\n              arrData[arrData.length - 2].active -\r\n              arrData[arrData.length - 3].active,\r\n            confirmed:\r\n              arrData[arrData.length - 2].confirmed -\r\n              arrData[arrData.length - 3].confirmed,\r\n            deaths:\r\n              arrData[arrData.length - 2].deaths -\r\n              arrData[arrData.length - 3].deaths,\r\n            recovered:\r\n              arrData[arrData.length - 2].recovered -\r\n              arrData[arrData.length - 3].recovered,\r\n          };\r\n\r\n          setConfirmed({\r\n            labels: confirmedData.map(\r\n              (each) => `${each.year - 2000}/${each.month + 1}`\r\n            ),\r\n            datasets: [\r\n              {\r\n                label: labelForChart.confirmed,\r\n                data: confirmedData.map((each) => each.confirmed),\r\n                barPercentage: 0.5,\r\n                barThickness: 25,\r\n                maxBarThickness: 60,\r\n                minBarLength: 2,\r\n                backgroundColor: theme.GraphBar,\r\n              },\r\n            ],\r\n          });\r\n          setToday({\r\n            labels: [\"확진자 수\", \"격리해제 환자 수\", \"사망자 수\"],\r\n            datasets: [\r\n              {\r\n                data: [\r\n                  todayData.confirmed,\r\n                  todayData.recovered,\r\n                  todayData.deaths,\r\n                ],\r\n                barPercentage: 0.5,\r\n                barThickness: 50,\r\n                maxBarThickness: 60,\r\n                minBarLength: 30,\r\n                backgroundColor: [theme.Confirm, theme.Recover, theme.Death],\r\n              },\r\n            ],\r\n          });\r\n          setTodayDate({\r\n            title: `${todayData.year}년 ${todayData.month + 1}월 ${\r\n              todayData.date\r\n            }일 확진자 현황`,\r\n            confirmed: todayData.confirmed,\r\n            recovered: todayData.recovered,\r\n            deaths: todayData.deaths,\r\n          });\r\n          setLoading(false);\r\n        })\r\n        .catch((error) => console.error(error));\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <TextH1>{toDayDate.title}</TextH1>\r\n      <TotalWordDiv>\r\n        <ConDiv>\r\n          확진자 수 <div>{toDayDate.confirmed}</div>\r\n        </ConDiv>\r\n        <RecovDiv>\r\n          격리해재자 수 <div>{toDayDate.recovered}</div>\r\n        </RecovDiv>\r\n        <DeathDiv>\r\n          사망자 수 <div>{toDayDate.deaths}</div>\r\n        </DeathDiv>\r\n      </TotalWordDiv>\r\n      <FlexDiv>\r\n        <EachDiv>{isLoading && <Loader />}</EachDiv>\r\n        <EachDiv>\r\n          <Doughnut data={toDay} />\r\n        </EachDiv>\r\n        <EachDiv>\r\n          <Bar data={confirmed} />\r\n        </EachDiv>\r\n      </FlexDiv>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Contents;\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst BASEURL = \"https://api.odcloud.kr/api\";\r\n\r\nconst CENTERAPI =\r\n  \"/15077586/v1/centers?page=1&perPage=10&serviceKey=data-portal-test-key\";\r\n\r\nconst getApi = axios.create({\r\n  baseURL: BASEURL,\r\n});\r\n\r\nconst Wrapper = styled.div`\r\n  margin: 30px 15% 30px 15%;\r\n`;\r\n\r\nconst Table = () => {\r\n  const [centerInfo, setCenterInfo] = useState([]);\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setLoading(true);\r\n      await getApi\r\n        .get(CENTERAPI)\r\n        .then((response) => {\r\n          const getData = response.data.data;\r\n          const centerData = getData.map((each) => {\r\n            return {\r\n              id: each.id,\r\n              address: each.address,\r\n              centerType: each.centerType,\r\n              centerName: each.centerName,\r\n              facilityName: each.facilityName,\r\n            };\r\n          });\r\n          setCenterInfo([...centerData]);\r\n          setLoading(false);\r\n        })\r\n        .catch((error) => console.error(error));\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <table className=\"table table-cart\">\r\n        <thead>\r\n          <tr>\r\n            <th width=\"15%\">중앙 권역</th>\r\n            <th width=\"20%\">센터 이름</th>\r\n            <th width=\"40%\">주소</th>\r\n            <th width=\"25%\">상세 주소</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {isLoading && <Loader />}\r\n          {centerInfo.map((each) => {\r\n            return (\r\n              <tr key={each.id}>\r\n                <td>{each.centerType}</td>\r\n                <td>{each.centerName}</td>\r\n                <td>{each.address}</td>\r\n                <td>{each.facilityName}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import Navbar from \"./Navbar\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport theme from \"../styles/theme\";\r\nimport Contents from \"./Contents\";\r\nimport Table from \"./Table\";\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Router>\r\n        <Navbar />\r\n\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Contents />\r\n          </Route>\r\n          <Route exact path=\"/table\">\r\n            <Table />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\nimport theme from \"./theme\";\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n    ${reset}\r\n    *{\r\n        box-sizing:border-box;\r\n    }\r\n    body{\r\n        font-size:14px;\r\n    \r\n        font-family: -apple-system,system-ui,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif;\r\n    }\r\n    a{\r\n        text-decoration:none;\r\n        color:inherit;\r\n        cursor: pointer;\r\n    }\r\n    ol, ul, li {\r\n        list-style: none;\r\n    }\r\n    img {\r\n        display: block;\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n    input, button {\r\n        background-color: transparent;\r\n    }\r\n    h1, h2, h3, h4, h5, h6 {\r\n    font-family:'Maven Pro', sans-serif;\r\n  }\r\n  .flex-box {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-contents: center;\r\n    align-items: center;\r\n  }\r\n  \r\n\r\n\r\n.table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n  }\r\n  \r\n  .table thead {\r\n    background-color: ${theme.bgColor};\r\n    color: white;\r\n    border: 1px solid white;\r\n    border-top: 0;\r\n  }\r\n  .table.table-cart thead {\r\n    background-color: ${theme.bgColor};\r\n  }\r\n  .table th {\r\n    padding: 15px;\r\n  }\r\n  .table td {\r\n    padding: 10px;\r\n  }\r\n  \r\n  .table tbody {\r\n    font-size: 18px;\r\n    border: 1px solid white;\r\n  }\r\n  \r\n  .table-cart {\r\n    text-align: center;\r\n  }\r\n  .table-cart tbody td:first-child {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 15px;\r\n    padding-left: 20px;\r\n  }\r\n  \r\n  .table-nutrition tbody td:last-child {\r\n    text-align: center;\r\n  }\r\n  \r\n  .table tbody tr:nth-child(2n) {\r\n    background-color: white;\r\n  }\r\n  \r\n  .table tbody tr:nth-child(2n + 1) {\r\n    background-color: ${theme.SecondBg};\r\n  }\r\n  \r\n  .th-product {\r\n    text-align: left;\r\n    padding-left: 25px;\r\n  }\r\n  \r\n  .cart-highlight {\r\n    background-color: ${theme.bgColor};\r\n    color: white;\r\n  }\r\n\r\n\r\n  .spinner {\r\n    animation: rotator 1.4s linear infinite;\r\n  }\r\n  \r\n  @keyframes rotator {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(270deg);\r\n    }\r\n  }\r\n  .path {\r\n    stroke-dasharray: 187;\r\n    stroke-dashoffset: 0;\r\n    transform-origin: center;\r\n    animation: dash 1.4s ease-in-out infinite, colors 5.6s ease-in-out infinite;\r\n  }\r\n  \r\n  @keyframes colors {\r\n    0% {\r\n      stroke: #4285f4;\r\n    }\r\n    25% {\r\n      stroke: #de3e35;\r\n    }\r\n    50% {\r\n      stroke: #f7c223;\r\n    }\r\n    75% {\r\n      stroke: #1b9a59;\r\n    }\r\n    100% {\r\n      stroke: #4285f4;\r\n    }\r\n  }\r\n  @keyframes dash {\r\n    0% {\r\n      stroke-dashoffset: 187;\r\n    }\r\n    50% {\r\n      stroke-dashoffset: 46.75;\r\n      transform: rotate(135deg);\r\n    }\r\n    100% {\r\n      stroke-dashoffset: 187;\r\n      transform: rotate(450deg);\r\n    }\r\n  \r\n`;\r\n\r\nexport default GlobalStyles;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport GlobalStyles from \"./styles/GlobalStyles\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyles />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}